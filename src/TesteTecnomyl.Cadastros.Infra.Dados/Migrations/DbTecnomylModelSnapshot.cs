// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TesteTecnomyl.Cadastros.Infra.Dados.Contextos;

#nullable disable

namespace TesteTecnomyl.Cadastros.Infra.Dados.Migrations
{
    [DbContext(typeof(DbTecnomyl))]
    partial class DbTecnomylModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Clientes.Cliente", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codigo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CodigoMunicipio")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_municipio");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cpf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasColumnName("nome");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoMunicipio");

                    b.ToTable("clientes", "public");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Municipios.Municipio", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codigo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("nome");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("varchar(2)")
                        .HasColumnName("uf");

                    b.HasKey("Codigo");

                    b.ToTable("municipios", "public");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Pedidos.ItemPedido", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codigo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CodigoPedido")
                        .HasColumnType("integer");

                    b.Property<int>("CodigoProduto")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_produto");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("observacao");

                    b.Property<int?>("ProdutoCodigo")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer")
                        .HasColumnName("quantidade");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric")
                        .HasColumnName("valor");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoPedido");

                    b.HasIndex("ProdutoCodigo");

                    b.ToTable("itens_pedido", "public");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Pedidos.Pedido", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codigo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<int>("CodigoCliente")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_cliente");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_pedido");

                    b.HasKey("Codigo");

                    b.HasIndex("CodigoCliente");

                    b.ToTable("pedidos", "public");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Produtos.Produto", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("codigo");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Codigo"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(120)")
                        .HasColumnName("nome");

                    b.HasKey("Codigo");

                    b.ToTable("produtos", "public");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Clientes.Cliente", b =>
                {
                    b.HasOne("TesteTecnomyl.Cadastros.Dominios.Entidades.Municipios.Municipio", "Municipio")
                        .WithMany("Cliente")
                        .HasForeignKey("CodigoMunicipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Pedidos.ItemPedido", b =>
                {
                    b.HasOne("TesteTecnomyl.Cadastros.Dominios.Entidades.Pedidos.Pedido", "Pedido")
                        .WithMany("ItensPedido")
                        .HasForeignKey("CodigoPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TesteTecnomyl.Cadastros.Dominios.Entidades.Produtos.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoCodigo");

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Pedidos.Pedido", b =>
                {
                    b.HasOne("TesteTecnomyl.Cadastros.Dominios.Entidades.Clientes.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("CodigoCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Clientes.Cliente", b =>
                {
                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Municipios.Municipio", b =>
                {
                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TesteTecnomyl.Cadastros.Dominios.Entidades.Pedidos.Pedido", b =>
                {
                    b.Navigation("ItensPedido");
                });
#pragma warning restore 612, 618
        }
    }
}
